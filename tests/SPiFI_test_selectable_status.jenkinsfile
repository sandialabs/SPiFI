#!/usr/bin/env groovy
/**
 * SPiFI_test_selectable_status.jenkinsfile
 *
 * This jenkinsfile defines a pipeline job that is used for testing
 * and debugging other pipelines.
 *
 * This job will pause for a specified number of seconds before returning
 * with a desired exit status.
 *
 * @param SLEEP_TIME The number of seconds that this job will 'sleep' before
 *                   completing.  Default: 10 seconds.
 * @param EXIT_STATUS The status this job will report to Jenkins.
 *                    Allowable status codes currently in Jenkins are:
 *                    - SUCCESS   : Job completed successfully (Default)
 *                    - FAILURE   : Job failed
 *                    - UNSTABLE  : Job reported as unstable
 *                    - ABORTED   : Job was aborted
 *                    - NOT_BUILT : Job was not built
 *
 */

String node_restriction = "RHEL7 || OS_RHEL7 || RHEL6 || OS_RHEL6 || master"

properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '',
                              daysToKeepStr: '90',       numToKeepStr: '30')),
    parameters([
        string(defaultValue: '10',
               description: 'Sleep time (seconds)',
               name: 'SLEEP_TIME'),
        string(defaultValue: node_restriction,
               description: "Node restriction, default: '${node_restriction}'",
               name: 'NODE_RESTRICTION'),
        choice(choices: "SUCCESS\nFAILURE\nUNSTABLE\nABORTED\nNOT_BUILT",
               description: 'Possible exit statuses for the job.',
               name: 'EXIT_STATUS')
    ])
])



if(params.containsKey("NODE_RESTRICTION"))
{
  node_restriction = params.NODE_RESTRICTION
}

int sleep_time = params.containsKey("SLEEP_TIME") ? params.SLEEP_TIME : 10



node(node_restriction)
{
    timestamps()
    {
    
    try
    {
        cleanWs()
    }
    catch(e)
    {
        println "WARNING!!!  cleanWs() failed.\n${e}"
    }


    stage('Execute')
    {
        println "\u27A4\n" +
                "\u27A4 Stage: Execute\n" +
                "\u27A4"

        String exitStatus = "SUCCESS"
        if(params.containsKey("EXIT_STATUS"))
        {
            exitStatus = params.EXIT_STATUS
        }

        timeout(time: sleep_time*2, unit: "SECONDS")
        {
            println("EXIT_STATUS: ${exitStatus}")
            println("SLEEP_DELAY: ${sleep_time}")

            sleep sleep_time

            currentBuild.result=exitStatus

        } // timeout

    } // stage execute

    } // timestamps

}  // node

