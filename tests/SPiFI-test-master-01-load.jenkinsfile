#!/usr/bin/env groovy
/*
 *  SEMS Pipeline Framework Infrastructure (SPiFI)
 *
 * Copyright 2020 National Technology & Engineering Solutions of Sandia, LLC (NTESS).
 * Under the terms of Contract DE-NA0003525 with NTESS, the U.S. Government retains
 * certain rights in this software.
 *
 * LICENSE (3-Clause BSD)
 * ----------------------
 * Copyright 2020 National Technology & Engineering Solutions of Sandia, LLC (NTESS).
 * Under the terms of Contract DE-NA0003525 with NTESS, the U.S. Government retains
 * certain rights in this software.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Contact
 * -------
 * William C. McLendon III (wcmclen@sandia.gov)
 */

/**
 * SPiFI_test_driver.jenkinsfile
 *
 * Test the SPiFI library
 */

// Configure default node restrictions
String node_restriction = "OS_RHEL7 || RHEL7 || master"


properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '',
                              artifactNumToKeepStr: '',
                              daysToKeepStr: '365',
                              numToKeepStr: '90')),
    disableConcurrentBuilds(),
    parameters([
        string(name: 'NODE_RESTRICTION',
               defaultValue: node_restriction,
               description: "Restrict what node(s) the pipeline script can run on. Default: '${node_restriction}'" )
    ])
])


// Load node restriction(s) from parameters
if(params.containsKey("NODE_RESTRICTION"))
{
    node_restriction = params.NODE_RESTRICTION
}



node(node_restriction)
{
    // Clean the workspace
    cleanWs();
    println "\u27A4 Workspace cleaned."

    timeout(time: 10, unit: "MINUTES")
    {

        // Stage: Try to load SPiFI
        stage("Load SPiFI")
        {
            // What is the branch name that we want to use
            String branchName = "master"

            try
            {
                @Library('SPiFI-DEV@master') _

                println "\u2705 SPiFI library loaded successfully"

                // Update branchName with spifi.Info.version() if possible
                try
                {
                    branchName = gov.sandia.sems.spifi.Info.version()
                    println "\u2705 Branch Loaded Version Info OK: ${branchName}"
                }
                catch(ex)
                {
                    println "\u274c An error occurred loading gov.sandia.sems.spifi.Info.version()\n${ex}\n" +
                            "\u274c Branch Loaded Version Info FAILED: ${branchName}"
                    currentBuild.result = "FAILURE"
                }
            }
            catch(ex)
            {
                println "\u274c ERROR: Failed to load SPiFI Library:\n${ex}"
                currentBuild.result = "FAILURE"
            }
        }   // end stage

    }   // timeout
}   // node



