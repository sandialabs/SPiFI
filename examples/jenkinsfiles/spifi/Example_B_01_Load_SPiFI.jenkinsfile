#!/usr/bin/env groovy
/*
 *  SEMS Pipeline Framework Infrastructure (SPiFI)
 *
 * Copyright 2020 National Technology & Engineering Solutions of Sandia, LLC (NTESS).
 * Under the terms of Contract DE-NA0003525 with NTESS, the U.S. Government retains
 * certain rights in this software.
 *
 * LICENSE (3-Clause BSD)
 * ----------------------
 * Copyright 2020 National Technology & Engineering Solutions of Sandia, LLC (NTESS).
 * Under the terms of Contract DE-NA0003525 with NTESS, the U.S. Government retains
 * certain rights in this software.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 *    may be used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Contact
 * -------
 * William C. McLendon III (wcmclen@sandia.gov)
 */

/**
 * Example B-01
 *
 * Dynamic loading of the SPiFI library using `library()` to
 * allow parameterizeable version picking.
 */

// (Optional) Set up build properties with a choice parameter
// to choose version of SPiFI to load from available versions
// on your server.
properties([
    parameters([
        choice(name: "SPiFI_VERSION",
               choices: ['SPiFI-1.3.0', 'SPiFI-1.2.2', 'SPiFI','SPiFI@master'],
               description: 'SPiFI Version')
        ])
    ])

// Fail if required parameters are missing.
assert params.containsKey("SPiFI_VERSION"), "Missing required parameter: SPiFI_VERSION"

// Grab a handle to all of SPiFI
def libspifi = library(params.SPiFI_VERSION).gov.sandia.sems.spifi


node("master || RHEL6 || RHEL7 || OS_RHEL6 || OS_RHEL7")
{
    stage("Get Version")
    {
        // Print out full version inside a println
        println "Loaded SPiFI version : ${libspifi.Info.version()}"

        // Grab individual version components
        Integer version_major = libspifi.Info.version_major()
        Integer version_minor = libspifi.Info.version_minor()
        Integer version_patch = libspifi.Info.version_patch()

        // Multi-line print
        println "Version breakdown:\n" +
                "- major: ${version_major}\n" +
                "- minor: ${version_minor}\n" +
                "- patch: ${version_patch}"
    } // End Stage

} // End Node



