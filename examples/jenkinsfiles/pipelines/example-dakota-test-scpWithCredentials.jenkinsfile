#!/usr/bin/env groovy



// Set up Jenkins pipeline properties.
properties([
    parameters([
        credentials(name: "SSH_CREDENTIAL",
                    credentialType: 'com.cloudbees.plugins.credentials.common.StandardCredentials',
                    defaultValue: 'f638e89f-7379-44be-b6de-6c23214e42b9',
                    description: "",
                    required: true)
    ])
])


// Exit UNSTABLE if this is the first run (i.e, parameters are missing).
Boolean is_first_run = false
if(false == params.containsKey("SSH_CREDENTIAL")) is_first_run = true
if(is_first_run)
{
    currentBuild.status = "UNSTABLE"
    return
}


timestamps()
{

node("RHEL7 || OS_RHEL7 || master")
{
    cleanWs()


    stage("Generate Data")
    {
        // do something and create a text file output.txt
        sh "ls -ltr > test-output.txt 2>&1"
        sh "echo 'this is a test' > test-output.md 2>&1"
    }  // End Stage


    stage("Archive Artifacts")
    {
        // archive the file as an artifact
        archiveArtifacts(allowEmptyArchive: true,
                         artifacts: '*.txt, *.md',
                         fingerprint: true)
    }  // End Stage


    stage("Transfer Files")
    {
        if(true)   // set to skip
        {
            println "SSH_CREDENTIAL = ${params.SSH_CREDENTIAL}"

            // SCP the file via a shell command inside a withCredentials() block.
            withCredentials([sshUserPrivateKey(credentialsId: params.SSH_CREDENTIAL, keyFileVariable: 'keyfile')])
            {
                sh "scp -2 -i ${keyfile} test-output.txt jenkins@software-srn.sandia.gov:/sems-data-store/dakota/testing/."
                // -v for verbose
            }
        }
    }  // End Stage



}  // End node

}  // End timestamps
